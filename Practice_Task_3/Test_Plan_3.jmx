<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Users Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">users.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">USER_NAME,USER_PASSWORD</stringProp>
      </CSVDataSet>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">PROTOCOL</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_NUMBER" elementType="Argument">
            <stringProp name="Argument.name">USER_NUMBER</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GLOBAL_CONNECTION_TIMEOUT" elementType="Argument">
            <stringProp name="Argument.name">GLOBAL_CONNECTION_TIMEOUT</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.desc">30s</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GAUSSIAN_DEVIATION" elementType="Argument">
            <stringProp name="Argument.name">GAUSSIAN_DEVIATION</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.desc">1s</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GAUSSIAN_CONSTANT_DELAY" elementType="Argument">
            <stringProp name="Argument.name">GAUSSIAN_CONSTANT_DELAY</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.desc">2s</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCRIPT_TIME_DURATION" elementType="Argument">
            <stringProp name="Argument.name">SCRIPT_TIME_DURATION</stringProp>
            <stringProp name="Argument.value">30</stringProp>
            <stringProp name="Argument.desc">30s</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCRIPT_STARTUP_DEPLAY" elementType="Argument">
            <stringProp name="Argument.name">SCRIPT_STARTUP_DEPLAY</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.desc">20s</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${URL}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">${GLOBAL_CONNECTION_TIMEOUT}</stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anonymous script" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USER_NUMBER}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${SCRIPT_TIME_DURATION}</stringProp>
        <stringProp name="ThreadGroup.delay">${SCRIPT_STARTUP_DEPLAY}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Home Page" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Home Page" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${GAUSSIAN_CONSTANT_DELAY}</stringProp>
              <stringProp name="RandomTimer.range">${GAUSSIAN_DEVIATION}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Choose random anonymous script action" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
            <stringProp name="TestPlan.comments">Smoke Tests</stringProp>
          </RandomController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Random Date Flow" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Open Random Date" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="-1322414027">Open Random Date</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Random Page" enabled="true"/>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Random Page" enabled="true"/>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Search By Name Flow - Done" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Search By Name" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="-1328009636">Search By Name</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Large Calendar Flow - Done" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Large Calendar" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="400822073">Open Large Calendar</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Contacts Flow - Done" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Contact" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="411443561">Open Contacts</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Home Page Flow" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Home Page" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="-1955043590">Open Home Page</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Random Page" enabled="true"/>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Random Page" enabled="true"/>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Predefinied Date Flow" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Predefinied Date" enabled="true"/>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Random Page" enabled="true"/>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Random Page" enabled="true"/>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Open Post Script" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="370320382">Anonymous script</stringProp>
                  <stringProp name="873216546">Open Post Script - Big</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Home Page" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Home Page /blog" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Post Script - Big" enabled="true"/>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Choose First Or Random Page" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">Random random = new Random()
random_bool_value = Math.abs(new Random().nextInt() % 0) + 1
log.info(random_bool_value)
vars.put(&quot;IS_RANDOM_PAGE&quot;, random_bool_value.toString())</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Random Post" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(${IS_RANDOM_PAGE} == 1)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Switch To Open Random Post" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="370320382">Anonymous script</stringProp>
                <stringProp name="-1322043097">Open Random Post</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If First Post" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(${IS_RANDOM_PAGE} == 0)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Switch To Open First Post" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="370320382">Anonymous script</stringProp>
                <stringProp name="-99669050">Open First Post</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open First Post" enabled="true"/>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Post Titles" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">POST_TITLE</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;a href=\&quot;\/blog\/post\/[a-zA-Z1-9_].*&lt;\/a&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$0$</stringProp>
            <stringProp name="RegexExtractor.default">0</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open First Title" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog/${POST_TITLE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get Event Validation" enabled="true">
              <stringProp name="HtmlExtractor.refname">EVENTVALIDATION</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=__EVENTVALIDATION]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default"></stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get ViewState" enabled="true">
              <stringProp name="HtmlExtractor.refname">VIEWSTATE</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=__VIEWSTATE]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default"></stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get Generator" enabled="true">
              <stringProp name="HtmlExtractor.refname">GENERATOR</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=__VIEWSTATEGENERATOR]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default"></stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Comment Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="370320382">Anonymous script</stringProp>
              <stringProp name="-1679915457">Comment</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Random Post" enabled="true"/>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Post Titles" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">POST_TITLES</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;a href=\&quot;\/blog\/post\/[a-zA-Z1-9_].*&lt;\/a&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$0$</stringProp>
            <stringProp name="RegexExtractor.default">0</stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Extract Post Titles" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.codehaus.groovy.runtime.StringGroovyMethods

def match_count=  vars.get(&quot;POST_TITLES_matchNr&quot;).toInteger()
int index = 1

while(index &lt; match_count) {
    title = vars.get(&quot;POST_TITLES_&quot; + index.toString())
    title = title.replaceAll(&quot;&lt;a href=\&quot;&quot;,&quot;&quot;)
    title = title.replaceAll(&quot;\&quot;&gt;[a-zA-Z1-9].*&quot;,&quot;&quot;)
    log.info(title)
    vars.put(&quot;POST_TITLES_&quot; + index.toString(), title)
    log.info(index.toString())
    index++
}

Random random = new Random()
random_title_number = Math.abs(new Random().nextInt() % match_count - 1) + 1
random_post_title = vars.get(&quot;POST_TITLES_&quot; + random_title_number.toString())
log.info(random_post_title)
vars.put(&quot;POST_TITLE&quot;, random_post_title.toString())


</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Random Post" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog/${POST_TITLE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get Event Validation" enabled="true">
              <stringProp name="HtmlExtractor.refname">EVENTVALIDATION</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=__EVENTVALIDATION]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default"></stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get ViewState" enabled="true">
              <stringProp name="HtmlExtractor.refname">VIEWSTATE</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=__VIEWSTATE]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default"></stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get Generator" enabled="true">
              <stringProp name="HtmlExtractor.refname">GENERATOR</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=__VIEWSTATEGENERATOR]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default"></stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Go To Comment Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="370320382">Anonymous script</stringProp>
              <stringProp name="-1679915457">Comment</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Contacts" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Contacts /blog/contact" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog/contact</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Large Calendar" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Large Calendar View" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog/calendar/default.aspx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Calendar Titles" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
              <stringProp name="RegexExtractor.refname">RANDOM_CALENDAR_POST</stringProp>
              <stringProp name="RegexExtractor.regex">\/blog\/post\/[A-Za-z0-9/-]*</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default">0</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Random Calendar Post By Title" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog/${RANDOM_CALENDAR_POST}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Comment" enabled="true"/>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Choose Comment Or Not Comment" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">Random random = new Random()
random_bool_value = Math.abs(new Random().nextInt() % 0) + 1
log.info(random_bool_value)
vars.put(&quot;IS_COMMENT&quot;, random_bool_value.toString())</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Comment" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(${IS_COMMENT} == 1)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post Comment" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${EVENTVALIDATION}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                  </elementProp>
                  <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${VIEWSTATE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                  </elementProp>
                  <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${GENERATOR}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                  </elementProp>
                  <elementProp name="ctl00$cphBody$ucCommentList$hfCaptcha" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">24f30fc6-51eb-45c6-907c-b654d9a75f0c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctl00$cphBody$ucCommentList$hfCaptcha</stringProp>
                  </elementProp>
                  <elementProp name="__CALLBACKPARAM" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">andrzej-|-xurten-|--|--|-body-|-false-|-false-|-24f30fc6-51eb-45c6-907c-b654d9a75f0c-|--|--|--|--|-10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">__CALLBACKPARAM</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/blog/${POST_DATE}/${POST_TITLE}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Search By Name" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Home Page /blog" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Post Titles" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">POST_TITLES</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;a href=\&quot;\/blog\/post\/[a-zA-Z1-9_].*&lt;\/a&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default">0</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Extract Post Titles" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.codehaus.groovy.runtime.StringGroovyMethods

def match_count=  vars.get(&quot;POST_TITLES_matchNr&quot;).toInteger()
int index = 1

while(index &lt; match_count) {
    title = vars.get(&quot;POST_TITLES_&quot; + index.toString())
    title = title.replaceAll(&quot;&lt;a href=\&quot;&quot;,&quot;&quot;)
    title = title.replaceAll(&quot;\&quot;&gt;[a-zA-Z1-9].*&quot;,&quot;&quot;)
    log.info(title)
    vars.put(&quot;POST_TITLES_&quot; + index.toString(), title)
    log.info(index.toString())
    index++
}

Random random = new Random()
random_title_number = Math.abs(new Random().nextInt() % match_count - 1) + 1
random_post_title = vars.get(&quot;POST_TITLES_&quot; + random_title_number.toString())
log.info(random_post_title)
vars.put(&quot;RANDOM_POST&quot;, random_post_title.toString())


</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Random Post By Title" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog/${RANDOM_POST}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Random Date" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Home Page" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/blog/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Dates" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RANDOM_DATE_TITLE</stringProp>
              <stringProp name="RegexExtractor.regex">\/blog[0-9/]{1,30}\/default</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default">0</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Date Title" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${RANDOM_DATE_TITLE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
